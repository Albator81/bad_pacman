import pygame as pg
from settings import *
_ = False

# NO are where there is a passageway normally but ghosts decide they want to leave the maze so I closed the maze
NO = 1
mini_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, _, 1],
    [1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1],
    [1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1],
    [1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1],
    [1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1],
    [1, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1],
    [1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, _, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, _, _, _, _, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, 1],
    [1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, _, _, _, _, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, 1],
    [1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1],
    [1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1],
    [NO, _, _, _, 1, 1, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, 1, 1, _, _, _, NO],
    [1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1],
    [1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, _, _, _, _, _, _, _, _, _, _, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]


class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        [pg.draw.rect(self.game.screen, 'darkblue',
                      (pos[0] * RESIZE, pos[1] * RESIZE, RESIZE, RESIZE),
                      2)
         for pos in self.world_map]
